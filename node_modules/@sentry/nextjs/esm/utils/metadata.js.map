{"version":3,"file":"metadata.js","sourceRoot":"","sources":["../../src/utils/metadata.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,WAAW,EAAE,MAAM,cAAc,CAAC;AAG3C,IAAM,mBAAmB,GAAG,cAAc,CAAC;AAE3C;;;;GAIG;AACH,MAAM,UAAU,aAAa,CAAC,OAAgB,EAAE,KAAe;IAC7D,OAAO,CAAC,SAAS,GAAG,OAAO,CAAC,SAAS,IAAI,EAAE,CAAC;IAC5C,OAAO,CAAC,SAAS,CAAC,GAAG;QACnB,OAAO,CAAC,SAAS,CAAC,GAAG;YACpB;gBACC,IAAI,EAAE,0BAA0B;gBAChC,QAAQ,EAAE,KAAK,CAAC,GAAG,CAAC,UAAA,IAAI,IAAI,OAAA,CAAC;oBAC3B,IAAI,EAAE,KAAG,mBAAmB,GAAG,IAAM;oBACrC,OAAO,EAAE,WAAW;iBACrB,CAAC,EAH0B,CAG1B,CAAC;gBACH,OAAO,EAAE,WAAW;aACT,CAAC;AAClB,CAAC","sourcesContent":["import { SDK_VERSION } from '@sentry/core';\nimport { Options, SdkInfo } from '@sentry/types';\n\nconst PACKAGE_NAME_PREFIX = 'npm:@sentry/';\n\n/**\n * A builder for the SDK metadata in the options for the SDK initialization.\n * @param options sdk options object that gets mutated\n * @param names list of package names\n */\nexport function buildMetadata(options: Options, names: string[]): void {\n  options._metadata = options._metadata || {};\n  options._metadata.sdk =\n    options._metadata.sdk ||\n    ({\n      name: 'sentry.javascript.nextjs',\n      packages: names.map(name => ({\n        name: `${PACKAGE_NAME_PREFIX}${name}`,\n        version: SDK_VERSION,\n      })),\n      version: SDK_VERSION,\n    } as SdkInfo);\n}\n"]}